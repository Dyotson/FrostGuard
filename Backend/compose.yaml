version: "3.8"

services:
  traefik:
    image: traefik:v2.9
    container_name: traefik
    restart: always
    ports:
      - "80:80"
      - "443:443"
    networks:
      - web
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.myresolver.acme.httpChallenge.entryPoint=web"
      - "--certificatesresolvers.myresolver.acme.email=i.munoz.repetto@gmail.com"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
      - "--certificatesresolvers.myresolver.acme.httpChallenge=true"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./letsencrypt:/letsencrypt
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik.rule=Host(`traefik.frostback.earth`)"

  api:
    image: python:latest
    restart: always
    ports:
      - "8000:8000"
    container_name: api
    networks:
      - web
      - db
      - mqtt
    volumes:
      - ./api:/app
    command: sh -c "pip install -r /app/requirements.txt && python /app/manage.py runserver 0.0.0.0:8000"
    env_file:
      - .env
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api.rule=Host(`api.frostback.earth`)"
      - "traefik.http.routers.api.entrypoints=web"
      - "traefik.http.routers.api-secure.rule=Host(`api.frostback.earth`)"
      - "traefik.http.routers.api-secure.entrypoints=websecure"
      - "traefik.http.routers.api-secure.tls.certresolver=myresolver"

  postgres:
    image: postgres:latest
    restart: always
    container_name: postgres
    networks:
      db:
        aliases:
          - postgres.local
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    volumes:
      - ./postgres:/var/lib/postgresql/data

  mosquitto:
    image: eclipse-mosquitto:latest
    restart: always
    ports:
      - "1883:1883"
      - "9001:9001"
    container_name: mosquitto
    networks:
      mqtt:
        aliases:
          - mosquitto.local
    volumes:
      - ./mosquitto/config:/mosquitto/config
      - ./mosquitto/data:/mosquitto/data
      - ./mosquitto/log:/mosquitto/log

networks:
  web:
  db:
  mqtt:

volumes:
  api:
  postgres:
  mosquitto:
  letsencrypt:
